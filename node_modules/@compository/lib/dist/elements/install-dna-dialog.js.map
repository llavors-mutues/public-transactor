{"version":3,"file":"install-dna-dialog.js","sourceRoot":"","sources":["../../src/elements/install-dna-dialog.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAc,QAAQ,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAChE,OAAO,EAAE,MAAM,EAAE,MAAM,uCAAuC,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,uCAAuC,CAAC;AAC/D,OAAO,EAAE,SAAS,EAAE,MAAM,0CAA0C,CAAC;AAErE,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,sBAAsB,EAAE,MAAM,QAAQ,CAAC;AAEhD,MAAM,OAAgB,gBAAiB,SAAQ,sBAAsB;IAUnE,IAAI,CAAC,MAAM,GAAG,IAAI;QAChB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,UAAU;QACd,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAgC,CAAC;QAC1E,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,mBAAmB,EAAE,CAAC;QACrD,MAAM,gBAAgB,GAAG,iBAAiB,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC;QAE9D,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,WAAW,CAAC;YACxC,MAAM,EAAE,IAAI,CAAC,SAAS;SACvB,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC;YACtC,SAAS,EAAE,QAAQ;YACnB,IAAI,EAAE;gBACJ;oBACE,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE,gBAAgB;iBACvB;aACF;YACD,gBAAgB;SACjB,CAAC,CAAC;QACH,MAAM,OAAO,CAAC,WAAW,CAAC,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAEhD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;QAE3D,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,eAAe,EAAE;YAC/B,MAAM,EAAE,EAAE,MAAM,EAAE;YAClB,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CACH,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,SAAS;YACd,CAAC,CAAC,IAAI,CAAA;;8BAEc,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI;;;;;aAK7C;YACH,CAAC,CAAC,IAAI,CAAA;;;;;yBAKS,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;;;aAGxD;;;;sBAIS,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS;mBACpC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE;;;;;;;;KAQrC,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,cAAc;QACvB,OAAO;YACL,YAAY,EAAE,MAAM;YACpB,YAAY,EAAE,MAAM;YACpB,eAAe,EAAE,SAAS;SAC3B,CAAC;IACJ,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO,YAAY,CAAC;IACtB,CAAC;CACF;AA5FC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;mDACL;AAGtB;IADC,KAAK,CAAC,SAAS,CAAC;iDACA;AAGjB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;kDACT","sourcesContent":["import { html, LitElement, property, query } from 'lit-element';\nimport { Dialog } from 'scoped-material-components/mwc-dialog';\nimport { Button } from 'scoped-material-components/mwc-button';\nimport { TextField } from 'scoped-material-components/mwc-textfield';\nimport { AdminWebsocket, DnaBundle } from '@holochain/conductor-api';\nimport { sharedStyles } from './sharedStyles';\nimport { BaseCompositoryService } from './base';\n\nexport abstract class InstallDnaDialog extends BaseCompositoryService {\n  @property({ type: Object })\n  dnaBundle!: DnaBundle;\n\n  @query('#dialog')\n  _dialog!: Dialog;\n\n  @property({ type: String })\n  _dnaPath!: string;\n\n  open(opened = true) {\n    this._dialog.open = opened;\n  }\n\n  async installDna() {\n    const adminWs = this._compositoryService.adminWebsocket as AdminWebsocket;\n    const agentKey = await adminWs.generateAgentPubKey();\n    const installed_app_id = `generated-app-${Date.now() % 1000}`;\n\n    const dnaHash = await adminWs.registerDna({\n      bundle: this.dnaBundle,\n    });\n\n    const result = await adminWs.installApp({\n      agent_key: agentKey,\n      dnas: [\n        {\n          hash: dnaHash,\n          nick: installed_app_id,\n        },\n      ],\n      installed_app_id,\n    });\n    await adminWs.activateApp({ installed_app_id });\n\n    const cellId = Object.values(result.slots)[0].base_cell_id;\n\n    this.dispatchEvent(\n      new CustomEvent('dna-installed', {\n        detail: { cellId },\n        bubbles: true,\n        composed: true,\n      })\n    );\n    this.open(false);\n  }\n\n  render() {\n    return html`\n      <mwc-dialog id=\"dialog\" heading=\"Install new DNA\">\n        ${this.dnaBundle\n          ? html`\n              <div class=\"column\">\n                <span>Name: ${this.dnaBundle.manifest.name}</span>\n                <span style=\"margin-top: 8px;\"\n                  >Are you sure you want to install this DNA?</span\n                >\n              </div>\n            `\n          : html`\n              <mwc-textfield\n                id=\"dna-path\"\n                placeholder=\"Dna.gz path\"\n                required\n                @input=${(e: any) => (this._dnaPath = e.target.value)}\n              >\n              </mwc-textfield>\n            `}\n\n        <mwc-button\n          slot=\"primaryAction\"\n          .disabled=${!this._dnaPath && !this.dnaBundle}\n          @click=${() => this.installDna()}\n        >\n          Install\n        </mwc-button>\n        <mwc-button slot=\"secondaryAction\" dialogAction=\"cancel\">\n          Cancel\n        </mwc-button>\n      </mwc-dialog>\n    `;\n  }\n\n  static get scopedElements() {\n    return {\n      'mwc-dialog': Dialog,\n      'mwc-button': Button,\n      'mwc-textfield': TextField,\n    };\n  }\n\n  static get styles() {\n    return sharedStyles;\n  }\n}\n"]}