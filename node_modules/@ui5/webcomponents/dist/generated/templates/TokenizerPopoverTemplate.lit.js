
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<ui5-responsive-popover tokenizer-popover="true" style=${styleMap(context.styles.popover)} header-text=${ifDefined(context.morePopoverTitle)} ?content-only-on-desktop="${context.hasValueState}" no-arrow placement-type="Bottom" horizontal-align="Left">${ !context.hasValueState ? block1(context) : undefined }<ui5-list class="ui5-tokenizer-list" mode="Delete" @ui5-item-delete=${ifDefined(context.itemDelete)}>${ repeat(context._tokens, (item, index) => item._id || index, (item, index) => block4(item, index, context)) }</ui5-list>${ context._isPhone ? block5(context) : undefined }</ui5-responsive-popover>`; };
const block1 = (context) => { return html`<div slot="header" class="ui5-responsive-popover-header" style="${styleMap(context.styles.popoverHeader)}">${ context._isPhone ? block2(context) : undefined }<div class="${classMap(context.classes.popoverValueState)}" style="${styleMap(context.styles.popoverValueStateMessage)}">${ repeat(context.valueStateMessageText, (item, index) => item._id || index, (item, index) => block3(item, index, context)) }</div></div>`; };
const block2 = (context) => { return html`<div class="row" style="${styleMap(context.styles.popoverHeaderTitle)}"><ui5-title level="H5" class="ui5-responsive-popover-header-text">Remove</ui5-title><ui5-button class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${context.closeMorePopover}"></ui5-button></div>`; };
const block3 = (item, index, context) => { return html`${ifDefined(item)}`; };
const block4 = (item, index, context) => { return html`<ui5-li .tokenRef=${ifDefined(item)}>${ifDefined(item.text)}</ui5-li>`; };
const block5 = (context) => { return html`<div slot="footer" class="ui5-responsive-popover-footer"><ui5-button design="Transparent" @click="${context.closeMorePopover}">OK</ui5-button></div>`; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;