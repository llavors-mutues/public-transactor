
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<ui5-responsive-popover id="${ifDefined(context._id)}-responsive-popover" allow-target-overlap stay-open-on-scroll placement-type="Bottom" horizontal-align="Left" ?disable-scrolling="${context._isIE}" no-arrow with-padding no-stretch ?_hide-header=${ifDefined(context._shouldHideHeader)} @keydown="${context._onkeydown}" @ui5-after-close="${ifDefined(context.onResponsivePopoverAfterClose)}">${ context.showHeader ? block1(context) : undefined }<div class="ui5-dt-picker-content ${classMap(context.classes.picker)}"><ui5-calendar class="ui5-dt-cal ${classMap(context.classes.dateTimeView)}" id="${ifDefined(context._id)}-calendar" primary-calendar-type="${ifDefined(context._primaryCalendarType)}" format-pattern="${ifDefined(context._formatPattern)}" timestamp="${ifDefined(context._calendarTimestamp)}" .selectionMode="${ifDefined(context._calendarSelectionMode)}" .minDate="${ifDefined(context.minDate)}" .maxDate="${ifDefined(context.maxDate)}" @ui5-selected-dates-change="${ifDefined(context.onSelectedDatesChange)}" ?hide-week-numbers="${context.hideWeekNumbers}" ._currentPicker="${ifDefined(context._calendarCurrentPicker)}">${ repeat(context._calendarSelectedDates, (item, index) => item._id || index, (item, index) => block3(item, index, context)) }</ui5-calendar>${ !context.phone ? block4(context) : undefined }<ui5-time-selection id="${ifDefined(context._id)}-time-sel" class="ui5-dt-time ${classMap(context.classes.dateTimeView)}" value="${ifDefined(context._timeSelectionValue)}" format-pattern="${ifDefined(context._formatPattern)}" ._currentSlider="${ifDefined(context._currentTimeSlider)}" @ui5-change="${ifDefined(context.onTimeSelectionChange)}" @ui5-slider-change="${ifDefined(context.onTimeSliderChange)}"></ui5-time-selection></div>${ context.showFooter ? block5(context) : undefined }</ui5-responsive-popover> `; };
const block1 = (context) => { return html`${ context.phone ? block2(context) : undefined }`; };
const block2 = (context) => { return html`<div class="ui5-dt-picker-header"><ui5-segmentedbutton style="width: 8rem"><ui5-togglebutton key="Date" ?pressed="${context.showDateView}" @click="${context._dateTimeSwitchChange}">${ifDefined(context.btnDateLabel)}</ui5-togglebutton><ui5-togglebutton key="Time" ?pressed="${context.showTimeView}" @click="${context._dateTimeSwitchChange}">${ifDefined(context.btnTimeLabel)}</ui5-togglebutton></ui5-segmentedbutton></div>`; };
const block3 = (item, index, context) => { return html`<ui5-date value="${ifDefined(item)}"></ui5-date>`; };
const block4 = (context) => { return html`<span class="ui5-dt-picker-separator"></span>`; };
const block5 = (context) => { return html`<div slot="footer" class="ui5-dt-picker-footer"><ui5-button id="ok" class="ui5-dt-picker-action" design="Emphasized" ?disabled="${context._submitDisabled}" @click="${context._submitClick}">${ifDefined(context.btnOKLabel)}</ui5-button><ui5-button id="cancel" class="ui5-dt-picker-action" design="Transparent" @click="${context._cancelClick}">${ifDefined(context.btnCancelLabel)}</ui5-button></div>`; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;