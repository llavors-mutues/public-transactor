
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<div class="ui5-date-picker-root" style="${styleMap(context.styles.main)}"><!-- INPUT --><ui5-input id="${ifDefined(context._id)}-inner" class="ui5-date-picker-input" placeholder="${ifDefined(context._placeholder)}" type="${ifDefined(context.type)}" value="${ifDefined(context.value)}" ?disabled="${context.disabled}" ?required="${context.required}" ?readonly="${context.readonly}" value-state="${ifDefined(context.valueState)}" data-sap-focus-ref ._inputAccInfo ="${ifDefined(context.accInfo)}" @ui5-change="${ifDefined(context._onInputChange)}" @ui5-input="${ifDefined(context._onInputInput)}" @ui5-submit="${ifDefined(context._onInputSubmit)}" @keydown="${context._onkeydown}">${ context.valueStateMessage.length ? block1(context) : undefined }${ !context.readonly ? block2(context) : undefined }</ui5-input><slot name="formSupport"></slot></div>`; };
const block1 = (context) => { return html`<slot name="valueStateMessage" slot="valueStateMessage"></slot>`; };
const block2 = (context) => { return html`<ui5-icon slot="icon" name="${ifDefined(context.openIconName)}" tabindex="-1" accessible-name="${ifDefined(context.openIconTitle)}" show-tooltip @click="${context.togglePicker}" input-icon ?pressed="${context._isPickerOpen}" dir="${ifDefined(context.effectiveDir)}"></ui5-icon>`; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;