
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<section class="ui5-color-picker-root"><div class="ui5-color-picker-main-color" style="${styleMap(context.styles.mainColor)}" @mousedown="${context._handleMouseDown}" @mouseup="${context._handleMouseUp}" @mousemove="${context._handleMouseMove}" @mouseout="${context._handleMouseOut}"><div class="ui5-color-picker-circle" style="${styleMap(context.styles.circle)}"></div></div><div class="ui5-color-picker-sliders-wrapper"><ui5-slider disabled="${ifDefined(context.inputsDisabled)}" class="ui5-color-picker-hue-slider" min="0" max="1530" value="${ifDefined(context._hue)}" @input="${context._handleHueInput}"></ui5-slider><ui5-slider disabled="${ifDefined(context.inputsDisabled)}" class="ui5-color-picker-alpha-slider" min="0" max="1" step="0.01" value="${ifDefined(context._alpha)}" @input="${context._handleAlphaInput}"></ui5-slider></div><div class="ui5-color-picker-current-color"><div class="ui5-color-picker-colors-wrapper"><span class="ui5-color-picker-white"></span><span class="ui5-color-picker-color"><div class="ui5-color-picker-color-inner" style="${styleMap(context.styles.colorSpan)}"></div></span></div><div class="ui5-color-picker-hex-input-wrapper"><ui5-label>Hex</ui5-label><ui5-input class="ui5-color-picker-hex-input" value="${ifDefined(context.hex)}" @change="${context._handleHEXChange}" value-state="${ifDefined(context.hexInputErrorState)}"></ui5-input></div></div><div class="ui5-color-picker-rgb-wrapper" @change="${context._handleRGBInputsChange}"><div class="ui5-color-picker-rgb"><ui5-input id="red" class="ui5-color-picker-rgb-input" disabled="${ifDefined(context.inputsDisabled)}" value="${ifDefined(context._color.r)}"></ui5-input><ui5-label>R</ui5-label></div><div class="ui5-color-picker-rgb"><ui5-input id="green" class="ui5-color-picker-rgb-input" disabled="${ifDefined(context.inputsDisabled)}" value="${ifDefined(context._color.g)}"></ui5-input><ui5-label>G</ui5-label></div><div class="ui5-color-picker-rgb"><ui5-input id="blue" class="ui5-color-picker-rgb-input" disabled="${ifDefined(context.inputsDisabled)}" value="${ifDefined(context._color.b)}"></ui5-input><ui5-label>B</ui5-label></div><div class="ui5-color-picker-rgb"><ui5-input disabled="${ifDefined(context.inputsDisabled)}" class="ui5-color-picker-rgb-input" value="${ifDefined(context._alpha)}" @input="${context._handleAlphaInput}" @change="${context._handleAlphaChange}"></ui5-input><ui5-label>A</ui5-label></div></div></section>`; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;