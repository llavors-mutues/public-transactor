
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<ui5-responsive-popover id="${ifDefined(context._id)}-responsive-popover" class="ui5-time-picker-popover" placement-type="Bottom" horizontal-align="Left" allow-target-overlap _hide-header no-arrow no-stretch stay-open-on-scroll @ui5-after-close="${ifDefined(context.onResponsivePopoverAfterClose)}" @wheel="${context._handleWheel}"><ui5-time-selection id="${ifDefined(context._id)}-time-sel" value="${ifDefined(context._timeSelectionValue)}" format-pattern="${ifDefined(context._formatPattern)}" .hideHours="${ifDefined(context.hideHours)}" .hideMinutes="${ifDefined(context.hideMinutes)}" .hideSeconds="${ifDefined(context.hideSeconds)}" .minutesStep="${ifDefined(context.minutesStep)}" .secondsStep="${ifDefined(context.secondsStep)}" .maxHours="${ifDefined(context.maxHours)}" .maxMinutes="${ifDefined(context.maxMinutes)}" .maxSeconds="${ifDefined(context.maxSeconds)}" @ui5-change="${ifDefined(context.onTimeSelectionChange)}"></ui5-time-selection><div slot="footer" class="ui5-time-picker-footer" @keydown=${context._onfooterkeydown}><ui5-button id="submit" design="Emphasized" @click="${context.submitPickers}">${ifDefined(context.submitButtonLabel)}</ui5-button><ui5-button id="close" design="Transparent" @click="${context.closePicker}">${ifDefined(context.cancelButtonLabel)}</ui5-button></div></ui5-responsive-popover>`; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;