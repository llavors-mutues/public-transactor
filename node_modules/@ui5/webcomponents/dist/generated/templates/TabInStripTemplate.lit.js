
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<li id="${ifDefined(context._id)}" class="${ifDefined(context.headerClasses)}" tabindex="${ifDefined(context._tabIndex)}" role="tab" aria-posinset="${ifDefined(context._posinset)}" aria-setsize="${ifDefined(context._setsize)}" aria-controls="ui5-tc-contentItem-${ifDefined(context._posinset)}" aria-selected="${ifDefined(context.effectiveSelected)}" aria-disabled="${ifDefined(context.effectiveDisabled)}" ?disabled="${context.effectiveDisabled}" aria-labelledby="${ifDefined(context.ariaLabelledBy)}" data-ui5-stable="${ifDefined(context.stableDomRef)}" style="list-style-type: none;">${ context.icon ? block1(context) : undefined }<div class="ui5-tab-strip-itemContent">${ !context._isInline ? block2(context) : undefined }${ context.text ? block4(context) : undefined }${ context._isInline ? block5(context) : undefined }</div></li><!-- Additional text --> `; };
const block1 = (context) => { return html`<div class="ui5-tab-strip-item-icon-outer"><ui5-icon name="${ifDefined(context.icon)}" class="ui5-tab-strip-item-icon"></ui5-icon></div>`; };
const block2 = (context) => { return html`${ context.additionalText ? block3(context) : undefined }`; };
const block3 = (context) => { return html`<span class="ui5-tab-strip-itemAdditionalText" id="${ifDefined(context._id)}-additionalText">${ifDefined(context.additionalText)}</span>`; };
const block4 = (context) => { return html`<span class="ui5-tab-strip-itemText" id="${ifDefined(context._id)}-text"><span class="${ifDefined(context.headerSemanticIconClasses)}"></span>${ifDefined(context.text)}</span>`; };
const block5 = (context) => { return html`${ context.additionalText ? block6(context) : undefined }`; };
const block6 = (context) => { return html`<span class="ui5-tab-strip-itemAdditionalText" id="${ifDefined(context._id)}-additionalText">${ifDefined(context.additionalText)}</span>`; };


const main = (context, tags, suffix) => {
	setTags(tags);
	setSuffix(suffix);
	return block0(context);
};
 
export default main;