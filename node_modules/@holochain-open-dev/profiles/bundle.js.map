{"version":3,"file":"bundle.js","sourceRoot":"","sources":["../src/bundle.ts"],"names":[],"mappings":"AAEA,YAAY;AACZ,OAAO,EAAE,eAAe,EAAE,MAAM,8CAA8C,CAAC;AAC/E,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAE1D,SAAS,YAAY,CACnB,GAAW,EACX,SAAmC,EACnC,IAAgB;IAEhB,MAAM,QAAQ,GAAG,cAAc,CAAC;IAChC,MAAM,SAAS,GAAG,eAAe,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACjD,IAAI,CAAC,SAAS,GAAG;;;;;eAKJ,SAAS,MAAM,SAAS;OAChC,CAAC;IAEN,QAAQ,CAAC,MAAM,CACb,SAAS,EACR,KAAM,SAAQ,SAAS;KAA2C,CACpE,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,OAAO,UAAU,MAAM,CAAC,YAA0B,EAAE,MAAc;IACvE,MAAM,eAAe,GAAG,IAAI,eAAe,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;IAClE,MAAM,KAAK,GAAG,IAAI,aAAa,CAAC,eAAe,CAAC,CAAC;IAEjD,OAAO;QACL,UAAU,EAAE;YACV;gBACE,IAAI,EAAE,eAAe;gBACrB,MAAM,CAAC,IAAgB;oBACrB,YAAY,CAAC,eAAe,EAAE,YAAY,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;gBACzE,CAAC;aACF;SACF;QACD,WAAW,EAAE,EAAE;QACf,iBAAiB,EAAE,EAAE;KACtB,CAAC;AACJ,CAAC","sourcesContent":["import { AppWebsocket, CellId } from '@holochain/conductor-api';\nimport { Constructor } from 'lit-element';\n//@ts-ignore\nimport { createUniqueTag } from '@open-wc/scoped-elements/src/createUniqueTag';\nimport { ListProfiles } from './elements/list-profiles';\nimport { ProfilesService } from './profiles.service';\nimport { ProfilesStore } from './profiles.store';\nimport { connectStore } from '@holochain-open-dev/common';\n\nfunction renderUnique(\n  tag: string,\n  baseClass: Constructor<HTMLElement>,\n  root: ShadowRoot\n) {\n  const registry = customElements;\n  const uniqueTag = createUniqueTag(tag, registry);\n  root.innerHTML = `\n        <link\n          href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n          rel=\"stylesheet\"\n        />\n            <${uniqueTag}></${uniqueTag}>\n      `;\n\n  registry.define(\n    uniqueTag,\n    (class extends baseClass {} as unknown) as Constructor<HTMLElement>\n  );\n}\n\nexport default function lenses(appWebsocket: AppWebsocket, cellId: CellId) {\n  const profilesService = new ProfilesService(appWebsocket, cellId);\n  const store = new ProfilesStore(profilesService);\n\n  return {\n    standalone: [\n      {\n        name: 'List Profiles',\n        render(root: ShadowRoot) {\n          renderUnique('list-profiles', connectStore(ListProfiles, store), root);\n        },\n      },\n    ],\n    entryLenses: {},\n    attachmentsLenses: [],\n  };\n}\n"]}