{"version":3,"file":"profiles.service.js","sourceRoot":"","sources":["../src/profiles.service.ts"],"names":[],"mappings":"AAGA,MAAM,OAAO,eAAe;IAC1B,YACS,YAA0B,EAC1B,MAAc,EACd,WAAW,UAAU;QAFrB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAa;IAC3B,CAAC;IAEJ,KAAK,CAAC,YAAY;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,WAAmB;QACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,cAAsB;QACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE;YACtC,eAAe,EAAE,cAAc;SAChC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,cAAc;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAAgB;QAClC,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QAErE,OAAO;YACL,aAAa,EAAE,aAAa,CAAC,aAAa;YAC1C,OAAO,EAAE,aAAa,CAAC,OAAO;SAC/B,CAAC;IACJ,CAAC;IAEO,QAAQ,CAAC,OAAe,EAAE,OAAY;QAC5C,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;YAChC,GAAG,EAAE,IAAW;YAChB,OAAO,EAAE,IAAI,CAAC,MAAM;YACpB,SAAS,EAAE,IAAI,CAAC,QAAQ;YACxB,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SAC3B,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import { AppWebsocket, CellId } from '@holochain/conductor-api';\nimport { AgentProfile, Profile } from './types';\n\nexport class ProfilesService {\n  constructor(\n    public appWebsocket: AppWebsocket,\n    public cellId: CellId,\n    public zomeName = 'profiles'\n  ) {}\n\n  async getMyProfile(): Promise<AgentProfile> {\n    return this.callZome('get_my_profile', null);\n  }\n\n  async getAgentProfile(agentPubKey: string): Promise<AgentProfile> {\n    return this.callZome('get_agent_profile', agentPubKey);\n  }\n\n  async searchProfiles(nicknamePrefix: string): Promise<Array<AgentProfile>> {\n    return this.callZome('search_profiles', {\n      nickname_prefix: nicknamePrefix,\n    });\n  }\n\n  async getAllProfiles(): Promise<Array<AgentProfile>> {\n    return this.callZome('get_all_profiles', null);\n  }\n\n  async createProfile(profile: Profile): Promise<AgentProfile> {\n    const profileResult = await this.callZome('create_profile', profile);\n\n    return {\n      agent_pub_key: profileResult.agent_pub_key,\n      profile: profileResult.profile,\n    };\n  }\n\n  private callZome(fn_name: string, payload: any) {\n    return this.appWebsocket.callZome({\n      cap: null as any,\n      cell_id: this.cellId,\n      zome_name: this.zomeName,\n      fn_name: fn_name,\n      payload: payload,\n      provenance: this.cellId[1],\n    });\n  }\n}\n"]}