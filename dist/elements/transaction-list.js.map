{"version":3,"file":"transaction-list.js","sourceRoot":"","sources":["../../src/elements/transaction-list.ts"],"names":[],"mappings":";AAAA,OAAO,EAAc,QAAQ,EAAE,IAAI,EAAkB,MAAM,aAAa,CAAC;AACzE,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAE1D,OAAO,EAAE,IAAI,EAAE,MAAM,qCAAqC,CAAC;AAC3D,OAAO,EAAE,gBAAgB,EAAE,MAAM,kDAAkD,CAAC;AAEpF,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AACtC,OAAO,EAAE,IAAI,EAAE,MAAM,qCAAqC,CAAC;AAC3D,OAAO,EAAE,QAAQ,EAAE,MAAM,0CAA0C,CAAC;AAGpE,MAAM,OAAgB,eAAgB,SAAQ,YAA6B;IAA3E;QACE,wBAAwB;;QAExB,yBAAyB;QAGzB,aAAQ,GAAG,IAAI,CAAC;IA6FlB,CAAC;IAzFC,KAAK,CAAC,YAAY;QAChB,MAAM,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;QACP,IAAI,CAAC,aAAa,EAAE;WACjB,CAAC;IACV,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,QAAQ;YACf,OAAO,IAAI,CAAA;;;;;;;OAOV,CAAC;QAEJ,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QAEjD,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC;YAC7B,OAAO,IAAI,CAAA;;aAEJ,CAAC;QAEV,OAAO,IAAI,CAAA;;UAEL,cAAc,CAAC,GAAG,CAClB,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAA;;;;;;;;;oBASd,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC;YAC1C,CAAC,CAAC,KAAK;YACP,CAAC,CAAC,OAAO;oBACT,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAC/B,WAAW,CAAC,OAAO,CACpB;uBACI,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC;;;qBAG3C,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC;;;;mCAIjC,IAAI,CAAC,KAAK,CAAC,UAAU,CACpC,WAAW,CAAC,OAAO,CACpB;YACC,CAAC,CAAC,KAAK;YACP,CAAC,CAAC,OAAO;qBACR,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC;YAC3C,CAAC,CAAC,WAAW;YACb,CAAC,CAAC,eAAe;;;;;kBAKnB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC;YAC1C,CAAC,CAAC,GAAG;YACL,CAAC,CAAC,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM;;;;cAItC,CAAC,GAAG,cAAc,CAAC,MAAM,GAAG,CAAC;YAC7B,CAAC,CAAC,IAAI,CAAA,4CAA4C;YAClD,CAAC,CAAC,IAAI,CAAA,EAAE;WACX,CACF;;KAEJ,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,OAAO;YACL,uBAAuB,EAAE,gBAAgB;YACzC,UAAU,EAAE,IAAI;YAChB,eAAe,EAAE,QAAQ;YACzB,UAAU,EAAE,IAAI;SACjB,CAAC;IACJ,CAAC;;AA1FM,sBAAM,GAAG,YAAY,CAAC;AAF7B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;iDACZ","sourcesContent":["import { LitElement, property, html, PropertyValues } from 'lit-element';\nimport { StoreElement } from '@holochain-open-dev/common';\n\nimport { List } from 'scoped-material-components/mwc-list';\nimport { CircularProgress } from 'scoped-material-components/mwc-circular-progress';\n\nimport { sharedStyles } from './utils/shared-styles';\nimport { dateString } from '../utils';\nimport { Icon } from 'scoped-material-components/mwc-icon';\nimport { ListItem } from 'scoped-material-components/mwc-list-item';\nimport { TransactorStore } from '../transactor.store';\n\nexport abstract class TransactionList extends StoreElement<TransactorStore> {\n  /** Public attributes */\n\n  /** Private properties */\n\n  @property({ type: Boolean })\n  _loading = true;\n\n  static styles = sharedStyles;\n\n  async firstUpdated() {\n    await this.store.fetchMyTransactions();\n    this._loading = false;\n  }\n\n  render() {\n    return html`<div class=\"column center-content\">\n      ${this.renderContent()}\n    </div>`;\n  }\n\n  renderContent() {\n    if (this._loading)\n      return html`\n        <div class=\"padding center-content column\">\n          <mwc-circular-progress indeterminate></mwc-circular-progress>\n          <span class=\"placeholder\" style=\"margin-top: 18px;\"\n            >Fetching transaction history...</span\n          >\n        </div>\n      `;\n\n    const myTransactions = this.store.myTransactions;\n\n    if (myTransactions.length === 0)\n      return html`<div class=\"padding\">\n        <span class=\"placeholder\">You have no transactions in your history</span>\n      </div>`;\n\n    return html`\n      <mwc-list style=\"width: 100%;\">\n        ${myTransactions.map(\n          (transaction, i) => html`\n            <div class=\"row\" style=\"align-items: center;\">\n              <mwc-list-item\n                twoline\n                noninteractive\n                graphic=\"avatar\"\n                style=\"flex: 1;\"\n              >\n                <span>\n                  ${this.store.isOutgoing(transaction.content)\n                    ? 'To '\n                    : 'From '}\n                  ${this.store.counterpartyNickname(\n                    transaction.content\n                  )}\n                  on ${dateString(transaction.content.timestamp)}\n                </span>\n                <span slot=\"secondary\"\n                  >${this.store.counterpartyKey(transaction.content)}\n                </span>\n                <mwc-icon\n                  slot=\"graphic\"\n                  .style=\"color: ${this.store.isOutgoing(\n                    transaction.content\n                  )\n                    ? 'red'\n                    : 'green'}\"\n                  >${this.store.isOutgoing(transaction.content)\n                    ? 'call_made'\n                    : 'call_received'}</mwc-icon\n                >\n              </mwc-list-item>\n\n              <span style=\"font-size: 20px; margin: 0 24px;\">\n                ${this.store.isOutgoing(transaction.content)\n                  ? '-'\n                  : '+'}${transaction.content.amount}\n                credits\n              </span>\n            </div>\n            ${i < myTransactions.length - 1\n              ? html`<li divider padded role=\"separator\"></li> `\n              : html``}\n          `\n        )}\n      </mwc-list>\n    `;\n  }\n\n  getScopedElements() {\n    return {\n      'mwc-circular-progress': CircularProgress,\n      'mwc-icon': Icon,\n      'mwc-list-item': ListItem,\n      'mwc-list': List,\n    };\n  }\n}\n"]}